name: Build and release upload service container images

on:
  workflow_run:
    workflows: [Build static assets]
    branches: [main]
    types: 
      - completed

jobs:
  build-upload-container:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
          - arm64

    steps:
    - name: checkout 
      uses: actions/checkout@v3

    - name: get-environment-tag
      id: get-tag
      run: printf '::set-output name=tag::%s' "$(git rev-parse --short HEAD)"

    - name: docker-build-setup
      uses: docker/setup-buildx-action@v1

    - name: docker-qemu-setup
      uses: docker/setup-qemu-action@v1

    - name: github-login
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: build & push
      working-directory: upload-md
      run: | 
        docker buildx build --push --platform linux/${{ matrix.platform }} --provenance false -t ghcr.io/algchoo/upload-${{ matrix.platform }}:${{ steps.get-tag.outputs.tag }} .

  release-scan:
    needs: [build-upload-container]
    runs-on: ubuntu-22.04

    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
          - arm64

    steps:
    - name: checkout 
      uses: actions/checkout@v3

    - name: get-environment-tag
      id: get-tag
      run: printf '::set-output name=tag::%s' "$(git rev-parse --short HEAD)"

    - name: github-login
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: create manifest
      run: |
        docker manifest create ghcr.io/algchoo/upload:${{ steps.get-tag.outputs.tag }} \
        ghcr.io/algchoo/upload-amd64:${{ steps.get-tag.outputs.tag }} \
        ghcr.io/algchoo/upload-arm64:${{ steps.get-tag.outputs.tag }}

    - name: annotations
      run: |
        docker manifest annotate ghcr.io/algchoo/upload:${{ steps.get-tag.outputs.tag }} ghcr.io/algchoo/upload-amd64:${{ steps.get-tag.outputs.tag }} --os linux --arch amd64
        docker manifest annotate ghcr.io/algchoo/upload:${{ steps.get-tag.outputs.tag }} ghcr.io/algchoo/upload-arm64:${{ steps.get-tag.outputs.tag }} --os linux --arch arm64

    - name: push manifest
      run: docker manifest push ghcr.io/algchoo/upload:${{ steps.get-tag.outputs.tag }}

    - name: scan
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: 'ghcr.io/algchoo/upload-${{ matrix.platform }}:${{ steps.get-tag.outputs.tag }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
