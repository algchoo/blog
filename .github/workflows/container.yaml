name: Build and release container images

on:
  push:
    branches:
      - dev
    paths:
      - "nginx/"
      - "upload-md/"
      - "resources/css/**"
      - "resources/js/**"
      - "resources/sass/**"
      - ".github/workflows/container.yaml"

jobs:
  build-static-assets:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: setup-node
      uses: actions/setup-node@v3

    - name: npm-build
      run: npm install && npm run build

    - name: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: static-assets
        path: public/build

  build-php-container:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    needs: [build-static-assets]
    steps:
    - name: checkout 
      uses: actions/checkout@v3

    - name: get-environment-tag
      id: get-tag
      run: printf '::set-output name=tag::%s' "$(git rev-parse --short HEAD)"

    - name: download-static-assets
      uses: actions/download-artifact@v4
      with:
        name: static-assets
        path: public/build

    - name: docker-build-setup
      uses: docker/setup-buildx-action@v1

    - name: docker-qemu-setup
      uses: docker/setup-qemu-action@v1

    - name: github-login
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: dockerhub-login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PASS}}

    - name: build
      run: |
        docker buildx build --platform linux/amd64 --load -t ghcr.io/algchoo/blog:${{ steps.get-tag.outputs.tag }} . && \
        docker buildx build --platform linux/arm64 --load -t ghcr.io/algchoo/blog:${{ steps.get-tag.outputs.tag }} .

    - name: scan
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: 'ghcr.io/algchoo/blog:${{ steps.get-tag.outputs.tag }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: push
      run: docker push ghcr.io/algchoo/blog:${{ steps.get-tag.outputs.tag }}

  build-nginx-container:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    needs: [build-static-assets]
    steps:
    - name: checkout 
      uses: actions/checkout@v3

    - name: get-environment-tag
      id: get-tag
      run: printf '::set-output name=tag::%s' "$(git rev-parse --short HEAD)"
    - name: download-static-assets
      uses: actions/download-artifact@v4
      with:
        name: static-assets
        path: public/build

    - name: docker-build-setup
      uses: docker/setup-buildx-action@v1

    - name: docker-qemu-setup
      uses: docker/setup-qemu-action@v1

    - name: github-login
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: dockerhub-login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PASS}}

    - name: build
      run: | 
        docker buildx build --platform linux/amd64 --load -t ghcr.io/algchoo/nginx:${{ steps.get-tag.outputs.tag }} . && \
        docker buildx build --platform linux/arm64 --load -t ghcr.io/algchoo/nginx:${{ steps.get-tag.outputs.tag }} .

    - name: scan
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: 'ghcr.io/algchoo/nginx:${{ steps.get-tag.outputs.tag }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: push
      run: docker push ghcr.io/algchoo/nginx:${{ steps.get-tag.outputs.tag }}

  build-upload-container:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - name: checkout 
      uses: actions/checkout@v3

    - name: get-environment-tag
      id: get-tag
      run: printf '::set-output name=tag::%s' "$(git rev-parse --short HEAD)"

    - name: docker-build-setup
      uses: docker/setup-buildx-action@v1

    - name: docker-qemu-setup
      uses: docker/setup-qemu-action@v1

    - name: github-login
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: build
      run: | 
        docker buildx build --platform linux/amd64 -t ghcr.io/algchoo/upload:${{ steps.get-tag.outputs.tag }} . && \
        docker buildx build --platform linux/arm64 -t ghcr.io/algchoo/upload:${{ steps.get-tag.outputs.tag }} .

    - name: scan
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: 'ghcr.io/algchoo/upload:${{ steps.get-tag.outputs.tag }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: push
      run: docker push ghcr.io/algchoo/upload:${{ steps.get-tag.outputs.tag }}
