name: Build and release container images

on:
  push:
    branches:
      - main

jobs:
  build-static-assets:
    runs-on: ubuntu:latest
    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: setup-node
      uses: actions/setup-node@v3

    - name: npm-build
      run: npm install
      run: npm run build

    - name: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: static-assets
        path: public/build

  build-php-container:
    runs-on: ubuntu:latest
    needs: [build-static-assets]
    steps:
    - name: checkout 
      uses: actions/checkout@v3

    - name: get-environment-tag
      id: get-tag
      run: printf '::set-output name=tag::%s' "$(git rev-parse --short HEAD)"

    - name: download-static-assets
      uses: actions/download-artifact@v4
      with:
        name: static-assets
        path: public/build

    - name: check-static-assets
      run: ls -la public/build/assets

  #   - name: docker-build-setup
  #     uses: docker/setup-buildx-action@v1
  #     uses: docker/setup-qemu-action@v1

  #   - name: github-dockerhub-login
  #     uses: docker/login-action@v3
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USER }}
  #       password: ${{ secrets.DOCKERHUB_PASS}}
  #     uses: docker/login-action@v3
  #     with:
  #       registry: ghcr.io
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.GITHUB_TOKEN }}

  #   - name: build-scan-push
  #     run: docker buildx build -t gchr.io/algchoo/blog:${{ steps.get-tag.outputs.tag }}
  #     uses: aquasecurity/trivy-action@0.28.0
  #     with:
  #       image-ref: 'gchr.io/algchoo/blog:${{ steps.get-tag.outputs.tag }}'
  #       format: 'table'
  #       exit-code: '1'
  #       ignore-unfixed: true
  #       vuln-type: 'os,library'
  #       severity: 'CRITICAL,HIGH'
  #     run: docker push gchr.io/algchoo/blog:${{ steps.get-tag.outputs.tag }}

  # build-nginx-container:
  #   runs-on: ubuntu:latest
  #   needs: [build-static-assets]
  #   steps:
  #   - name: checkout 
  #     uses: actions/checkout@v3

  #   - name: get-environment-tag
  #     id: get-tag
  #     run: printf '::set-output name=tag::%s' "$(git rev-parse --short HEAD)"
  #   - name: download-static-assets
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: static-assets
  #       path: public/build

  #   - name: docker-build-setup
  #     uses: docker/setup-buildx-action@v1
  #     uses: docker/setup-qemu-action@v1

  #   - name: github-dockerhub-login
  #     uses: docker/login-action@v3
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USER }}
  #       password: ${{ secrets.DOCKERHUB_PASS}}
  #     uses: docker/login-action@v3
  #     with:
  #       registry: ghcr.io
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.GITHUB_TOKEN }}

  #   - name: build-scan-push
  #     run: docker buildx build -t gchr.io/algchoo/nginx:${{ steps.get-tag.outputs.tag }}
  #     uses: aquasecurity/trivy-action@0.28.0
  #     with:
  #       image-ref: 'gchr.io/algchoo/nginx:${{ steps.get-tag.outputs.tag }}'
  #       format: 'table'
  #       exit-code: '1'
  #       ignore-unfixed: true
  #       vuln-type: 'os,library'
  #       severity: 'CRITICAL,HIGH'
  #     run: docker push gchr.io/algchoo/nginx:${{ steps.get-tag.outputs.tag }}
