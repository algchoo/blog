name: Build and release container images

on:
  push:
    branches:
      - dev
    paths:
      - "nginx/**"
      - "upload-md/**"
      - "resources/css/**"
      - "resources/js/**"
      - "resources/sass/**"
      - ".github/workflows/container.yaml"

jobs:
  build-static-assets:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: setup-node
      uses: actions/setup-node@v3

    - name: npm-build
      run: npm install && npm run build

    - name: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: static-assets
        path: public/build

  build-php-container:
    runs-on: ubuntu-22.04

    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
          - arm64
          
    needs: [build-static-assets]
    steps:
    - name: checkout 
      uses: actions/checkout@v3

    - name: get-environment-tag
      id: get-tag
      run: printf '::set-output name=tag::%s' "$(git rev-parse --short HEAD)"

    - name: download-static-assets
      uses: actions/download-artifact@v4
      with:
        name: static-assets
        path: public/build

    - name: docker-build-setup
      uses: docker/setup-buildx-action@v3

    - name: docker-qemu-setup
      uses: docker/setup-qemu-action@v3

    - name: github-login
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: build & push
      run: |
        docker buildx build --push --platform linux/${{ matrix.platform }} -t ghcr.io/algchoo/blog-${{ matrix.platform }}:${{ steps.get-tag.outputs.tag }} .

    - name: create manifest
      run: |
        docker manifest create algchoo/blog:latest \
        algchoo/blog-amd64:latest \
        algchoo/blog-arm64:latest

    - name: annotations
      run: |
        docker manifest annotate algchoo/blog:latest algchoo/blog-amd64:latest --os linux --arch amd64
        docker manifest annotate algchoo/blog:latest algchoo/blog-arm64:latest --os linux --arch arm64

    - name: push manifest
      run: docker manifest push algchoo/blog:latest

    - name: scan
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: 'ghcr.io/algchoo/blog-${{ matrix.platform }}:${{ steps.get-tag.outputs.tag }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

  build-nginx-container:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
          - arm64

    needs: [build-static-assets]
    steps:
    - name: checkout 
      uses: actions/checkout@v3

    - name: get-environment-tag
      id: get-tag
      run: printf '::set-output name=tag::%s' "$(git rev-parse --short HEAD)"
    - name: download-static-assets
      uses: actions/download-artifact@v4
      with:
        name: static-assets
        path: public/build

    - name: docker-build-setup
      uses: docker/setup-buildx-action@v1

    - name: docker-qemu-setup
      uses: docker/setup-qemu-action@v1

    - name: github-login
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: build & push
      working-directory: nginx
      run: | 
        docker buildx build --push --platform linux/${{ matrix.platform }} -t ghcr.io/algchoo/nginx-${{ matrix.platform }}:${{ steps.get-tag.outputs.tag }} .

    - name: create manifest
      run: |
        docker manifest create algchoo/nginx:latest \
        algchoo/nginx-amd64:latest \
        algchoo/nginx-arm64:latest

    - name: annotations
      run: |
        docker manifest annotate algchoo/nginx:latest algchoo/nginx-amd64:latest --os linux --arch amd64
        docker manifest annotate algchoo/nginx:latest algchoo/nginx-arm64:latest --os linux --arch arm64

    - name: push manifest
      run: docker manifest push algchoo/nginx:latest

    - name: scan
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: 'ghcr.io/algchoo/nginx-${{ matrix.platform }}:${{ steps.get-tag.outputs.tag }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

  build-upload-container:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
          - arm64

    steps:
    - name: checkout 
      uses: actions/checkout@v3

    - name: get-environment-tag
      id: get-tag
      run: printf '::set-output name=tag::%s' "$(git rev-parse --short HEAD)"

    - name: docker-build-setup
      uses: docker/setup-buildx-action@v1

    - name: docker-qemu-setup
      uses: docker/setup-qemu-action@v1

    - name: github-login
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: build & push
      working-directory: upload-md
      run: | 
        docker buildx build --push --platform linux/${{ matrix.platform }} -t ghcr.io/algchoo/upload-${{ matrix.platform }}:${{ steps.get-tag.outputs.tag }} .

    - name: create manifest
      run: |
        docker manifest create algchoo/upload:latest \
        algchoo/upload-amd64:latest \
        algchoo/upload-arm64:latest

    - name: annotations
      run: |
        docker manifest annotate algchoo/upload:latest algchoo/upload-amd64:latest --os linux --arch amd64
        docker manifest annotate algchoo/upload:latest algchoo/upload-arm64:latest --os linux --arch arm64

    - name: push manifest
      run: docker manifest push algchoo/upload:latest

    - name: scan
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: 'ghcr.io/algchoo/upload-${{ matrix.platform }}:${{ steps.get-tag.outputs.tag }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
